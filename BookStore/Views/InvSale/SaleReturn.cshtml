@model BookStore.Models.Inventory.SaleViewModel
@using BookStore.Models.ViewModel;
@using System.Data.Entity;
@using BookStore.Models.Inventory;
@{
    BookStore.Models.ApplicationDbContext db = new BookStore.Models.ApplicationDbContext();
    int j = 0;
    int Index = 0;
}

@*below is for jquery DatePicker*@
<link href="~/Content/jquery-ui.css" rel="stylesheet" />
@*<script src="~/Scripts/jquery-1.12.4.js"></script>*@
<script src="~/Scripts/jquery-ui.js"></script>



<div id="brandId">
    <div id="page-title">
        <h5>product Sale Return/Exchange Forms</h5>     
    </div>

    <div class="panel">
        <div class="panel-body">

            <div class="example-box-wrapper">
                @using (Html.BeginForm("Create", "InvSale", FormMethod.Post, new { @class = "form-horizontal bordered-row", id = "Sale-form", data_parsley_validate = "", novalidate = "" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="row">
                        <div class="col-md-12 font-red">
                            @Html.ValidationSummary(true)
                        </div>
                    </div>
                    <div class="row">

                        <label class="col-sm-2 control-label pull-left"><span class="red">*</span>Invoice/Chalan No</label>
                        <div class="col-sm-4">
                            @Html.TextBoxFor(model => model.Invoice, new { required = "required", @readonly = "readonly", @class = "form-control" })
                            <ul class="parsley-errors-list" id="parsley-id-4059"></ul>
                        </div>

                        <label class="col-sm-2 control-label pull-left"><span class="red">*</span>Invoice/Chalan Date</label>
                        <div class="col-sm-4">
                            <div class="input-prepend input-group">
                                <span class="add-on input-group-addon">
                                    <i class="glyph-icon icon-calendar"></i>
                                </span>
                                <span>
                                    @Html.TextBoxFor(model => model.InvoiceDate, "{0:dd-mm-yy}", new { @class = "datepicker form-control", type = "text", required = "required", data_parsley_id = "4059" })
                                </span>
                                <ul class="parsley-errors-list" id="parsley-id-4059"></ul>
                            </div>
                        </div>
                    </div>

                    <div class="row margin-top-05">

                        <label class="col-sm-2 control-label"><span class="red">*</span>Customer</label>
                        <div class="col-sm-4">
                            @Html.DropDownListFor(model => model.CustomerId, (IEnumerable<SelectListItem>)ViewBag.Customer_Id, "Select Customer", new { @class = "form-control", required = "", onchange = "GetCustomerInfo(this.id)" })
                            <ul class="parsley-errors-list" id="parsley-id-7330"></ul>
                        </div>
                        <label class="col-sm-2 control-label"><span class="red">*</span>Customer Name</label>
                        <div class="col-sm-4">
                            @Html.TextBoxFor(model => model.CustomerName, new { id = "CustomerName", required = "required", @class = "form-control" })
                            <ul class="parsley-errors-list" id="parsley-id-7330"></ul>
                        </div>

                    </div>

                    <div class="row margin-top-05">

                        <label class="col-sm-2 control-label"><span class="red">*</span>Phone Number</label>
                        <div class="col-sm-4">
                            @*<input type="text" id="CustomerPhone" name="CustomerPhone" required="required" class="form-control" ng-pattern="/^(?:\+88|01)?(?:\d{11}|\d{13})$/" />*@
                            @Html.TextBoxFor(model => model.CustomerPhone, new { id = "CustomerPhone", required = "required", @class = "form-control number" })
                            <ul class="parsley-errors-list  font-red" id="parsley-id-7330">
                                @Html.ValidationMessageFor(model => model.CustomerPhone)
                            </ul>
                        </div>

                    </div>

                    <div class="row">
                        <div class="col-sm-6">
                            <a id="addNew" class="btn btn-sm btn-primary btn-hover" href="#">
                                <span> Add Product</span>
                                <i class="glyph-icon icon-plus" title="" data-original-title=".icon-plus" aria-describedby="tooltip941007">

                                </i>
                            </a>
                        </div>
                    </div>
                    <div class="row margin-top-05">
                        <div class="col-md-12">
                            <table id="SaleTable" class="table table-striped table-bordered dt-responsive nowrap" width="100%" border="0" cellpadding="0" cellspacing="0">
                                <tr>
                                    <th>Sl No</th>
                                    <th>Main Catagory</th>
                                    <th>Sub Catagory</th>
                                    <td>Product</td>
                                    <th>Stock</th>
                                    <th>Quantity</th>
                                    <th>Sale Rate</th>
                                    <th>Sale Amount</th>
                                    <th>Status</th>
                                    @*<th></th>*@
                                </tr>
                                @if (Model != null && Model.Sale.Count > 0)
                                {
                                    j = 0;
                                    foreach (var i in Model.Sale)
                                    {
                                        <tr style="border:0px">
                                            <td>@(j + 1)</td>
                                            <td>@Html.DropDownListFor(a => a.Sale[j].MainCatagoryId, new SelectList(db.Catagories.Where(t => t.Parent_Id == "0").OrderBy(t => t.Name).ToList(), "Id", "Name", i.MainCatagoryId), "--select catagory--", new { id = "Sale[" + j + "]MainCatagoryId", @class = "form-control", @required = "", onchange = "GetSubCatagory(this.id)" })</td>
                                                                                      
                                            <td>@Html.DropDownListFor(a => a.Sale[j].SubCatagoryId, new SelectList(db.Catagories.Where(t => t.Parent_Id == i.MainCatagoryId).OrderBy(t => t.Name).ToList(), "Id", "Name", i.SubCatagoryId), "Select SubCatagory", new { @class = "form-control", required = "", onchange = "getProduct(this.id)" })</td>

                                            <td>@Html.DropDownListFor(a => a.Sale[j].Product_Id, new SelectList(db.Products.Where(t => t.Catagory_Id == i.SubCatagoryId).ToList(), "Id", "Name", i.Product_Id), "Select Product", new { @class = "form-control myclass", required = "", onchange = "ResetAll(this.id)" })</td>

                                            <td>@Html.TextBoxFor(a => a.Sale[j].Stock, new { id = "Sale[" + j + "]Stock", @class = "form-control display-block", @required = "required", @readonly = "readonly" })</td>
                                            <td>@Html.TextBoxFor(a => a.Sale[j].Qty, new { id = "Sale[" + j + "]Qty", @class = "form-control decimal", @required = "required", onkeyup = "getRate(this.id)" })</td>
                                            <td>@Html.TextBoxFor(a => a.Sale[j].SaleRate, new { id = "Sale[" + j + "]SaleRate", @class = "form-control decimal", @required = "required", onkeyup = "ChangeTotalAmt(this.id)" })</td>

                                            <td>@Html.TextBoxFor(a => a.Sale[j].SaleTotal, new { id = "Sale[" + j + "]SaleTotal", @class = "form-control", @required = "required", @readonly = "readonly" })</td>
                                            <td>@Html.DropDownListFor(a => a.Sale[j].Status, (IEnumerable<SelectListItem>)ViewBag.Status, "--select status--", new { id = "Sale[" + j + "]Status", @class = "form-control", style = "width:100%", @required = "required" })</td>
                                          
                                        </tr>
                                        j++;
                                    }
                                }
                            </table>
                        </div>
                    </div>


                    <div class="row bg-default content-box">
                        <label class="col-sm-3 control-label">
                            <span class="pull-left">
                                <a class="btn btn-link font-blue" href="/InvSale/Index">
                                    <i class="glyph-icon icon-angle-double-left" title="" data-original-title=".icon-angle-double-left" aria-describedby="tooltip602646">
                                        Back to List
                                    </i>
                                </a>
                            </span>
                        </label>
                        <div class="col-sm-4">
                            <button class="btn btn-lg btn-primary btn-hover" id="btnSubmit">
                                <span>Save</span>
                                <i class="glyph-icon icon-check" title="" data-original-title=".icon-check" aria-describedby="tooltip941007"></i>
                            </button>
                        </div>
                    </div>

                }

            </div>

        </div>
    </div>

</div>

<script>
    $(function () {
        $(".datepicker").datepicker({ dateFormat: "dd-M-yy" }).val();
    });
</script>

<script src="~/Scripts/SaleEdit.js"></script>
<script src="~/Scripts/input_validation.js"></script>